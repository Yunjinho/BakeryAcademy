<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.example.myapp.member.dao.IMemberRepository">

	<insert id="insertMember"
		parameterType="com.example.myapp.member.model.Member">
		<![CDATA[
		 	INSERT INTO member 
		 		(member_id, member_password, member_name, member_phone_number, member_email, member_nickname, is_admin, member_address,member_status)
    		VALUES 
    			(#{memberId}, #{memberPassword}, #{memberName}, #{memberPhoneNumber}, #{memberEmail}, #{memberNickName}, #{isAdmin}, #{memberAddress}, 1)
   		]]>
	</insert>

	<select id="selectMember" parameterType="string"
		resultType="com.example.myapp.member.model.Member">
		<![CDATA[
			SELECT
			member_id		AS "memberId",
			member_password		AS "memberPassword",		 		
			member_name		AS "memberName",
			member_phone_number AS "memberPhoneNumber",
			member_email		AS "memberEmail",
			member_nickname		AS "memberNickName",
			member_address	AS	"memberAddress",
			is_admin		AS "isAdmin"
			FROM
			member
			WHERE member_id=#{memberId} AND member_status=1
		]]>
	</select>

	<update id="updateMember"
		parameterType="com.example.myapp.member.model.Member">
		<![CDATA[
		UPDATE member
		SET
			member_name=#{memberName}, member_password=#{memberPassword}, member_address=#{memberAddress}, member_phone_number=#{memberPhoneNumber}, member_email=#{memberEmail}, member_nickname=#{memberNickName}
			WHERE
				member_id=#{memberId}
		]]>
	</update>

	<update id="deleteMember">
		<![CDATA[
			UPDATE member SET member_status=0 WHERE member_id = #{memberId}
    	]]>
	</update>

	<select id="getPassword" parameterType="string" resultType="string">
	<![CDATA[
		SELECT
		member_password
		FROM
		member
		WHERE member_id=#{memberId}
	]]>
	</select>
	
	<!-- 아이디, 닉네임, 이메일, 전화번호 중복체크시 -->
		<select id="duplicateMember" parameterType="string"
		resultType="string">
		<![CDATA[
			SELECT
			member_id		AS "memberId",
			member_nickname AS "memberNickName",
			member_email    AS "memberEmail",
			member_phone_number AS "memberPhoneNumber"
			FROM member
			WHERE member_status = 1 
		]]>
	</select>
	
	<select id="findMemberId" parameterType="com.example.myapp.member.model.Member" resultType="string">
	<![CDATA[
		SELECT member_id AS "memberId" FROM member WHERE member_name LIKE #{memberName} AND member_phone_number LIKE #{memberPhoneNumber} AND member_email LIKE #{memberEmail}
	]]>
	</select>
</mapper>