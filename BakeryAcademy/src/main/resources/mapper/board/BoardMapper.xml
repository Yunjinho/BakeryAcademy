<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.myapp.board.dao.IBoardRepository">


	<select id="selectMaxArticleNo" resultType="int">
	<![CDATA[
		SELECT 
			NVL(MAX(board_id),0) AS "articleNo"
		FROM board
	]]>
	</select>





	
	<select id="selectArticle" parameterType="int"
		resultType="com.example.myapp.board.model.Board">
	<![CDATA[
 	SELECT b.board_id 			AS "boardId",
			m.member_nickname AS "memberNickname",
			b.board_write_date AS "boardWriteDate",
			b.visit_count 		AS "visitCount",
			b.board_title 		AS "boardTitle",
			b.board_content 	AS "boardContent",
			bi.board_image_id AS "boardImageId",
			bi.board_image_name AS "boardImageName",
			bi.board_image_size AS "boardImageSize",
			bi.board_image_type AS "boardImageType",
			bi.board_image AS "boardImage"
			
		FROM board b
        JOIN member m ON b.member_id = m.member_id
		LEFT JOIN board_image bi ON b.board_id = bi.board_id
		WHERE b.board_id=#{boardId}
	]]>
	</select>
	
	
	

	<!-- 게시글입력 -->
	<insert id="insertArticle" parameterType="com.example.myapp.board.model.Board">
		INSERT INTO 
		board 
			(board_id, board_title, board_content, board_write_date, visit_count, member_id)  
		VALUES 
			(seq_board_id.NEXTVAL, #{boardTitle}, #{boardContent}, SYSDATE, 0, #{memberId})
		<selectKey resultType="int" keyProperty="boardId" order="AFTER">
			select nvl(max(board_id), 0) as "boardId" from board
		</selectKey>
	</insert>

	<insert id="insertFileData" parameterType="com.example.myapp.board.model.BoardImage">
	<![CDATA[
		INSERT INTO board_image(board_image_id, board_id, board_image, board_image_name, board_image_size, board_image_type) 
		VALUES(seq_board_image_id.NEXTVAL, #{boardId}, #{boardImage}, #{boardImageName}, #{boardImageSize}, #{boardImageType})
	]]>
	</insert>


	<select id="getFile" parameterType="int"
		resultType="com.example.myapp.board.model.BoardImage">
	<![CDATA[
		SELECT 
			board_image_id				AS "boardImageId", 
			board_id			AS "boardId", 
			board_image			AS "boardImage", 
			board_image_name			AS "boardImageName", 
			board_image_size	AS "boardImageSize", 
			board_image_type 			AS "boardImageType"
		FROM board_image 
		WHERE board_image_id=#{boardImageId}
	]]>
	</select>
	
	<!-- 삭제할 보드 게시물 조회 -->
<!-- 	<select id="selectDeleteBoard" parameterType="string" resultType="com.example.myapp.board.model.Board">
	<![CDATA[
		SELECT 
			member_id		AS "memberId"
		FROM
			board
		WHERE 
			board_id = #{boardId}
	]]>
	</select> -->
	
		<select id="selectDeleteBoard" parameterType="com.example.myapp.board.model.Board">
	<![CDATA[
		SELECT 
			member_id		AS "memberId"
		FROM
			board
		WHERE 
			board_id = #{boardId}
	]]>
	</select>
	
	<!-- 글삭제시 파일데이터 삭제 -->
	<delete id="deleteFileData" parameterType="int">
	<![CDATA[
		DELETE FROM board_image 
		WHERE EXISTS (SELECT board_id FROM board 
					  WHERE board.board_id=#{boardId} 
					  AND board.board_id=board_image.board_id)
	]]>
	</delete>
	
	
	<delete id="deleteArticleInfo" parameterType="int">
	<![CDATA[
		DELETE FROM board 
		WHERE DELETE FROM board WHERE board_id=#{boardId}
	]]>
	</delete>
	
	
<!-- 전체 게시물 조회 -->
<select id="selectAllBoardList" parameterType="hashmap" resultType="com.example.myapp.board.model.Board">
<![CDATA[
SELECT board_id AS "boardId",
		member_nickname AS "memberNickname",
		board_write_date AS "boardWriteDate",
		visit_count AS "visitCount",
		board_title AS "boardTitle",
		board_content AS "boardContent"
FROM (SELECT rownum AS rowNumber,board_id,member_nickname,board_write_date AS, visit_count,board_title, board_content
      FROM (select * from board b JOIN member m ON b.member_id=m.member_id)
      )
WHERE rowNumber BETWEEN #{start} AND #{end}
]]>

</select>

<!-- 제목/내용/닉네임으로 게시물 조회 -->
<select id="selectKeywordBaord" parameterType="hashmap" resultType="com.example.myapp.board.model.Board">
<![CDATA[
SELECT board_id AS "boardId", member_nickname AS "memberNickname", board_write_date AS "boardWriteDate", visit_count AS "visitCount",board_title AS "boardTitle", board_content AS "boardContent"
FROM ( SELECT rownum AS rowNumber,board_id, member_nickname, board_write_date, visit_count,board_title, board_content,member_status ,member_status
        FROM (SELECT b.board_id,m.member_nickname,b.board_write_date,b.visit_count,b.board_title,b.board_content ,m.member_status 
        		FROM board b JOIN member m ON b.member_id=m.member_id)
     			WHERE (member_nickname LIKE '%'||#{keyword}||'%' OR board_title LIKE '%'||#{keyword}||'%' OR board_content LIKE '%'||#{keyword}||'%') AND member_status=1
        )
WHERE rowNumber BETWEEN #{start} AND #{end} 
]]>
</select>

<delete id="deleteBoardImage" parameterType="Integer">
<![CDATA[
DELETE FROM board_image WHERE board_id=#{boardId}
]]>
</delete>

<delete id="deleteBoard" parameterType="Integer">
<![CDATA[
DELETE FROM board WHERE board_id=#{boardId}
]]>
</delete>

<select id="countBoard" resultType="Integer">
<![CDATA[
SELECT COUNT(*) FROM board
]]>
</select>

<select id="countKeywordBoard" resultType="Integer">
<![CDATA[
SELECT COUNT(*) FROM board b JOIN member m ON b.member_id=m.member_id
WHERE m.member_nickname LIKE '%'||#{keyword}||'%' OR b.board_title LIKE '%'||#{keyword}||'%' OR b.board_content LIKE '%'||#{keyword}||'%'
]]>
</select>

</mapper>